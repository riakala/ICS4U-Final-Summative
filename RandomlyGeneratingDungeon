import greenfoot.*;
import java.util.List;

public class RandomlyGeneratingDungeon extends World
{   
    /**
     * Constructor for objects of class RandomlyGeneratingDungeon.
     * 
     */
    public RandomlyGeneratingDungeon()
    {    
        // Create a new world with 600x400 cells with a cell size of 1x1 pixels.
        super(680, 480, 1, false); 
        addObject(new Link(),getWidth()/2,getHeight()/2+20);
               
        addObject(new FadeOverlay(),getWidth(),getHeight()/2+100);
        // main room
        addObject(new Wall(getWidth()/2, 40), 170, 20); // left half of the top wall main room
        addObject(new Wall(getWidth()/3, 40), 593, 20); // right half of the top wall main room
        addObject(new Wall(getWidth()*2,40),0,getHeight()-20); // bottom
        addObject(new Wall(40,getHeight()),20,getHeight()/2); // left

        // enemyRoomOne
        addObject(new Wall(getWidth()/2, 40), 170, -20); // left half of the bottom wall enemyOne room
        addObject(new Wall(getWidth()/3, 40), 593, -20); // right half of the bottom wall enemyOne room
        addObject(new Wall(getWidth()/2, 40), 170, -460); // left half of the top wall enemyOne room
        addObject(new Wall(getWidth()/3, 40), 593, -460); // right half of the top wall enemyOne room
        addObject(new Wall(40,getHeight()*2),getWidth()-20,-200); // right
        addObject(new Wall(40,getHeight()*2),20,0); // left
        // enemyRoomTwo
        addObject(new Wall(getWidth()/2, 40), 170, -500); // left half of the bottom wall enemyTwo room
        addObject(new Wall(getWidth()/3, 40), 593, -500); // right half of the bottom wall enemyTwo room
        addObject(new Wall(getWidth()*2,40),getWidth(),-940); // top wall of enemyRoomTwo
        addObject(new Wall(40,getHeight()*2),20,-480); // left
        // enemyRoomThree
        addObject(new Wall(getWidth(), 40), 1020, -500); // bottom wall enemyThree room
        addObject(new Wall(40,getHeight()*2),getWidth()+660,-440); // left
        // side room
        addObject(new Wall(40,getHeight()*2),getWidth()+20,-200); // right
        addObject(new Wall(40,getHeight()*2),getWidth()*2-20,0); // right
        addObject(new Wall(getWidth(), 40), 1020, 20); // top
        addObject(new Wall(getWidth(), 40), 1020, 460); // bottom
        //KeyRoom();

        generateKeyRoom();
        //addObject(new D
        paintOrder();
    }
    Class[] all = {Wall.class,Key.class,Block.class,Lava.class,Water.class, Door.class};
    public void scroll(String direction){
        int v=0;
        int h=0;
        if (direction.equals("left"))h=getWidth();
        if (direction.equals("right"))h=-getWidth();
        if (direction.equals("up"))v=getHeight();
        if (direction.equals("down"))v=-getHeight();
        int a=0;
        while (a<all.length){
            List object = getObjects(all[a]);
            if (! object.isEmpty()){
                for (int i=0; i<object.size(); i++){
                    Actor Object = (Actor) object.get(i);
                    Object.setLocation(Object.getX()+h,Object.getY()+v);
                }
            }
            a++;
        }
    }
    
    public void paintOrder(){
        setPaintOrder(Link.class,FadeOverlay.class,Wall.class,Key.class,Block.class,Lava.class,Water.class);
    }
    
    public void act(){
        paintOrder();
        if (tileset==0 )setBackground(new GreenfootImage("GreenTile.png"));
        if (tileset==1)setBackground(new GreenfootImage("BlueTile.png"));
        if (tileset==2)setBackground(new GreenfootImage("AquaTile.png"));
        if (tileset==3)setBackground(new GreenfootImage("YellowTile.png"));
        if (tileset==4)setBackground(new GreenfootImage("GreyTile.png"));
    }

    /**
    Tile Sets
    ---------
    0 = Green
    1 = Blue
    2 = Aqua
    3 = Yellow
    4 = Grey
    */
    int tileset = 0;
    public void changeTileSet(int i){
        tileset=i;
    }

    public void generateKeyRoom(){
        addObject(new Key(), 250, -200);
        addObject(new Key(), 250, -600);
        addObject(new Key(), 1000, 250);
        addObject(new Door(), 800, -600);
        addObject(new Door(), 900, -600);
        addObject(new Door(), 1000, -600);
        //addObject(new Door(), 1200, -600);
    }
    public void KeyRoom(){
        
    }

       }
    
